@page "/schedules"
@using AttendEase.DB.Models
@using AttendEase.Shared.Components.Schedules
@attribute [Authorize(Roles = "Admin")]

<PageTitle>Schedules</PageTitle>

<div class="header-help">
    <h1>Schedule Management</h1>

    <Button Color="ButtonColor.Secondary" Outline="true" @onclick="@(async () => await schedulesHelp.ToggleAsync())"><Icon Name="IconName.PatchQuestionFill" Size="IconSize.x5" /></Button>
</div>

<Collapse @ref="schedulesHelp">
    <Callout Heading="Schedule Management Help">
        <Accordion>
            <AccordionItem Title="Help coming soon...">
                <Content>
                    <ol>
                        <li>Help coming soon...</li>
                    </ol>
                </Content>
            </AccordionItem>
        </Accordion>
    </Callout>
</Collapse>

<div class="d-grid gap-2 d-md-flex justify-content-md-center my-2">
    <Button Class="me-1 my-1" Color="ButtonColor.Primary" @onclick="OnAddSchedule">Add User</Button>
    <Button Class="me-1 my-1" Color="ButtonColor.Primary" @onclick="OnEditSchedule" Disabled="isEditDisabled">
        Edit User
        <Badge Color="@(isEditDisabled ? BadgeColor.Danger : BadgeColor.Success)">@selectedSchedulesCount</Badge>
    </Button>
    <Button Class="me-0 my-1" Color="ButtonColor.Primary" @onclick="OnDeleteSchedules" Disabled="isDeleteDisabled">
        Delete User
        <Badge Color="@(isDeleteDisabled ? BadgeColor.Danger : BadgeColor.Success)">@selectedSchedulesCount</Badge>
    </Button>
</div>

<ListSchedules @ref="listSchedules" SelectedSchedulesChanged="OnSelectedItemsChanged" />

@code {
    private Collapse schedulesHelp = default!;
    private HashSet<Schedule> selectedSchedules = new();
    private ListSchedules listSchedules = default!;
    private bool isEditDisabled = true;
    private bool isDeleteDisabled = true;
    private int selectedSchedulesCount = 0;

    private void OnSelectedItemsChanged(HashSet<Schedule> selectedSchedules)
    {
        this.selectedSchedules = selectedSchedules;
        isEditDisabled = selectedSchedules.Count != 1;
        isDeleteDisabled = selectedSchedules.Count < 1;
        selectedSchedulesCount = selectedSchedules.Count;
    }

    private async Task OnAddSchedule()
    {
    }

    private async Task OnEditSchedule()
    {
    }

    private async Task OnDeleteSchedules()
    {
    }
}
