@page "/contacts"
@using AttendEase.Shared.Components.Contacts
@using DBContact = AttendEase.DB.Models.Contact
@attribute [Authorize(Roles = "Admin")]

<PageTitle>Contacts</PageTitle>

<div class="header-help">
    <h1>Contact Management</h1>

    <Button Color="ButtonColor.Secondary" Outline="true" @onclick="@(async () => await contactsHelp.ToggleAsync())"><Icon Name="IconName.PatchQuestionFill" Size="IconSize.x5" /></Button>
</div>

<Collapse @ref="contactsHelp">
    <Callout Heading="Contact Management Help">
        <Accordion>
            <AccordionItem Title="How to update status">
                <Content>
                    <ol>
                        <li>Click on the contact row to select it.</li>
                        <li>If the issue is resolved click "Mark as Close". If the issue was reopened, click "Mark as Open".</li>
                    </ol>
                </Content>
            </AccordionItem>
            <AccordionItem Title="How to delete contacts">
                <Content>
                    <ol>
                        <li>Select one or more contacts from the list.</li>
                        <li>Click on the "Delete Contacts" button.</li>
                        <li>Confirm the list of contacts.</li>
                        <li>Click on the "Delete" button.</li>
                    </ol>
                </Content>
            </AccordionItem>
        </Accordion>
    </Callout>
</Collapse>

<div class="d-grid gap-2 d-md-flex justify-content-md-center my-2">
    <Button Class="me-0 my-1" Color="ButtonColor.Primary" @onclick="OnDeleteContacts" Disabled="isDeleteDisabled">
        Delete Contacts
        <Badge Color="@(isDeleteDisabled ? BadgeColor.Danger : BadgeColor.Success)">@selectedContactsCount</Badge>
    </Button>
</div>

<ListContacts @ref="listContacts" SelectedContactsChanged="OnSelectedItemsChanged" />

@code {
    private Collapse contactsHelp = default!;
    private HashSet<DBContact> selectedContacts = new();
    private ListContacts listContacts = default!;
    private bool isDeleteDisabled = true;
    private int selectedContactsCount = 0;

    private void OnSelectedItemsChanged(HashSet<DBContact> selectedContacts)
    {
        this.selectedContacts = selectedContacts;
        isDeleteDisabled = selectedContacts.Count < 1;
        selectedContactsCount = selectedContacts.Count;
    }

    private async Task OnDeleteContacts()
    {
    }
}
